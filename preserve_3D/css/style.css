.box { width:300px; height: 300px; border: 3px solid red; 
        margin: 100px auto 0; }

.inner { width:100%; height: 100%; background-color: dodgerblue; 
        opacity: .7; }

/*

2D : 점,선,면 -> X축과 Y축
3D : 공간 - Z축 -> 원근감

matrix : transform 3d들을 한번에 쓸 수 있게 해주는 속성
perspective : 거리 (원근감), 수치가 낮을수록 왜곡이 심하다.
*/

.box { perspective: 500px; }
.inner { 
    transform: translate3d(100px,50px,100px);
    transform: rotateX(30deg);
    transform: rotate3d(0.2,0.3,0.5,45deg); /*    x,y,z축*/
    transform: rotateX(40deg); 
}

/*webGL도 공부하면 좋음 , 캡쳐도구*/ 
/*===================================================================================*/
/*perspective 속성 사용법*/
.exam { width:720px; height: 240px; margin:50px auto; border:5px solid green; 
    perspective: 500px;
}
/*부모 입장에서의 perspective를 적용했다.*/

.nemo { width:200px; height: 200px; background-color: firebrick; 
    margin: 20px; float: left; 
/*    transform: perspective(500px) rotateX(40deg);*/
    transform:rotateX(40deg);

}

/*======================================================================================*/
/*body { perspective: 500px; }*/

@keyframes spin {
    0% { transform: rotateY(0deg);}
    100% { transform: rotateY(360deg);}
}
.poster { width: 250px; margin:100px auto 0; 
            background:rgba(0,255,0,0.4);
    
    transform:rotateY(50deg);
    transform-style: preserve-3d;
/*    태그를 3d로 객체화,,단 익스플로러 11버전이상에서만 된다..*/
    
    animation: spin 10s linear infinite;
}

.img img { width:100%; vertical-align: top;
        transform:rotateX(0deg);
        transform-origin: top;
/*    회전을 할 수 있는 축을 지정한다 (기본은 가운데) */
        transition: transform .6s ease;
    }
/*====================================================================================*/
.poster:hover img{transform: rotateX(40deg);}

.open { perspective: 500px; width:200px;  }
.close { width: 200px; height:200px; background-color: blue; margin:100px; 
/*        transform: translateX(100px) rotate(40deg); */
        transform: translateZ(100px) rotateX(45deg); 
}
/*=============================================================*/
/*플립디자인*/
*{margin:0; padding:0;}
li { list-style: none; }

.phone{width:150px; margin:50px auto; perspective: 500px; }
.phone li {width:150px; height: 305px; position: relative;
}

.flip{ transform-style: preserve-3d; 
        transition: transform .4s linear; }

.front { position: absolute; top:0; left:0;
        backface-visibility: hidden;}

.back {  position: absolute; top:0; left:0; 
    backface-visibility: hidden;
    transform:rotateY(180deg);
}

.phone li:hover .flip{transform: rotateY(180deg);}
/*flip에 호버를 주면 돌아가려고 하는 미세한 떨림이 보인다*/
/*backface-visibility: 뒷면일 경우는 어떻게 보이게 할 것인가?*/

/*================================================================*/

.container { width:300px; height: 300px; border:2px solid #ccc; 
    margin:100px auto 0; position: relative; }
#cube { position: absolute; width: 100%; height: 100%; }
#cube > div { width: 300px; height: 300px; border: 2px solid black;
            box-sizing: border-box; 
            text-align: center; line-height:300px; 
            font-size: 120px; color: #fff; font-weight: bold;
            position: absolute; 
}
.front1{ background: hsla(0,100%,50%,0.4);}
.back1{ background: hsla(60,100%,50%,0.4); }
.right{  background: hsla(120,100%,50%,0.4); }
.left{ background: hsla(180,100%,50%,0.4); }
.top{  background: hsla(240,100%,50%,0.4); }
.bottom{ background: hsla(300,100%,50%,0.4); }

.container { perspective: 1000px; }
#cube { transform-style: preserve-3d; }
.front1{ transform: translateZ(150px);}
.back1{ transform: rotateX(180deg) translateZ(150px);}
.right{ transform:rotateY(90deg) translateZ(150px);}
.left{ transform:rotateY(-90deg) translateZ(150px);}
.top{  transform:rotateX(90deg) translateZ(150px);}
.bottom{  transform:rotateX(-90deg) translateZ(150px);}

#cube { transition: all .4s linear;}

#cube.show-back { transform: rotateX(180deg);}
#cube.show-right{ transform: rotateY(-90deg);}
#cube.show-left{ transform: rotateY(90deg);}
#cube.show-top{ transform: rotateX(-90deg);}
#cube.show-bottom{ transform: rotateX(90deg);}

.btn { text-align: center; margin-top: 100px; }
button { padding : 10px 20px; }
